name: Smartmirror.one CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  lint-test-build:
    name: Lint, Test and Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js Dependencies
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
        cache: npm

    - name: Install Project Dependencies
      run: npm ci

    - name: Lint Packages
      run: npm run lint

    - name: Test Packages
      run: npm test

    - name: Test Report - Backend
      uses: dorny/test-reporter@v1
      if: success() || failure() # run this step even if previous step failed
      with:
        name: Backend Jest Tests
        path: packages/backend/junit.xml
        reporter: jest-junit

    - name: Build Packages
      run: npm run build

    - name: Archive Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-result
        path: packages/**/dist

    - name: Comment Code Coverage Results on PR
      if: github.event_name == 'pull_request'
      uses: ArtiomTr/jest-coverage-report-action@v2
      with:
        coverage-file: packages/backend/coverage/coverage-final.json
        base-coverage-file: packages/backend/coverage/coverage-final.json

  package:
    name: Package Binaries
    runs-on: ${{ matrix.os }}
    needs: lint-test-build
    if: github.event_name != 'pull_request'
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js Dependencies
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
        cache: npm

    - name: Install Project Dependencies
      run: npm ci

    - name: Download Build Artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-result
        path: packages

    - name: Generate Binary
      run: npm run update:dependencies && npm run package
      working-directory: packages/backend

    - name: Upload Binary for Release
      uses: actions/upload-artifact@v2
      with:
        name: release
        path: packages/backend/_bins/*

  release:
    name: Release Version
    runs-on: ubuntu-latest
    needs: package
    if: github.event_name != 'pull_request'
    
    steps:
    - name: Download Release Binaries
      uses: actions/download-artifact@v3
      with:
        name: release
        path: releases

    - name: Release Binaries to GitHub
      uses: meeDamian/github-release@2.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        name: Smartmirror.one - Latest
        allow_override: true
        prerelease: true
        tag: latest
        files: >
          smartmirror-one-latest-linux:releases/smartmirror1-linux
          smartmirror-one-latest-mac:releases/smartmirror1-darwin
          smartmirror-one-latest-windows:releases/smartmirror1-win32.exe
